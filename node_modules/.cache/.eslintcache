[{"/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/index.js":"1","/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/App.js":"2","/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/CurrentPrice.js":"3","/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/TodaysPrices.js":"4","/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/TomorrowsPrices.js":"5","/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/Prices.js":"6"},{"size":427,"mtime":1639240906635,"results":"7","hashOfConfig":"8"},{"size":2523,"mtime":1639675895049,"results":"9","hashOfConfig":"8"},{"size":934,"mtime":1639677796903,"results":"10","hashOfConfig":"8"},{"size":983,"mtime":1639680847390,"results":"11","hashOfConfig":"8"},{"size":1004,"mtime":1639680858370,"results":"12","hashOfConfig":"8"},{"size":1213,"mtime":1639680813598,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1pcgwx4",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/index.js",[],["29","30"],"/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/App.js",["31","32"],"import './App.css';\nimport CurrentPrice from './components/CurrentPrice';\nimport Prices from './components/Prices';\nimport TodaysPrices from './components/TodaysPrices';\nimport TomorrowsPrices from './components/TomorrowsPrices';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\tconst [currentPrice, setCurrentPrice] = useState(null);\n\tconst [todaysPrices, setTodaysPrices] = useState(null);\n\tconst [tomorrowsPrices, setTomorrowsPrices] = useState(null);\n\tconst [separate, setSeparate] = useState(false);\n\n\tconst doSeparation = () => {\n\t\tif (separate) {\n\t\t\tsetSeparate(false);\n\t\t} else {\n\t\t\tsetSeparate(true);\n\t\t}\n\t};\n\n\tconst query = `query{\n\t\tviewer {\n\t\t\thomes {\n\t\t\t\tcurrentSubscription{\n\t\t\t\t\tpriceInfo{\n\t\t\t\t\t\tcurrent{\n\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t\tenergy\n\t\t\t\t\t\t\ttax\n\t\t\t\t\t\t\tstartsAt\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttoday {\n\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t\tenergy\n\t\t\t\t\t\t\ttax\n\t\t\t\t\t\t\tstartsAt\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttomorrow {\n\t\t\t\t\t\t\ttotal\n\t\t\t\t\t\t\tenergy\n\t\t\t\t\t\t\ttax\n\t\t\t\t\t\t\tstartsAt\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n  }`;\n\n\tfunction handleData(data) {\n\t\tconsole.log(data);\n\t\tsetTodaysPrices(\n\t\t\tdata['viewer']['homes'][0]['currentSubscription']['priceInfo']['today']\n\t\t);\n\t\tsetTomorrowsPrices(\n\t\t\tdata['viewer']['homes'][0]['currentSubscription']['priceInfo']['tomorrow']\n\t\t);\n\t\tsetCurrentPrice(\n\t\t\tdata['viewer']['homes'][0]['currentSubscription']['priceInfo']['current']\n\t\t);\n\t}\n\n\tasync function getPrices() {\n\t\tconsole.log('Submitting');\n\t\tlet response = fetch('https://api.tibber.com/v1-beta/gql', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer QjAfeE7K_2jwxTx0k0TeSd7B_LUZjgYCqd-51M8BAtg',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ query }),\n\t\t});\n\t\tresponse.then((res) => res.json()).then((data) => handleData(data['data']));\n\t}\n\n\tuseEffect(() => {\n\t\tgetPrices();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconsole.log(currentPrice);\n\t\tconsole.log(todaysPrices);\n\t\tconsole.log(tomorrowsPrices);\n\t}, [currentPrice]);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{currentPrice && <CurrentPrice currentPrice={currentPrice} />}\n\t\t\t{todaysPrices && tomorrowsPrices && !separate && (\n\t\t\t\t<Prices todaysPrices={todaysPrices} tomorrowsPrices={tomorrowsPrices} />\n\t\t\t)}\n\t\t\t{todaysPrices && separate && <TodaysPrices todaysPrices={todaysPrices} />}\n\t\t\t{tomorrowsPrices && separate && (\n\t\t\t\t<TomorrowsPrices tomorrowsPrices={tomorrowsPrices} />\n\t\t\t)}\n\t\t\t<button\n\t\t\t\tclassName={'separationButton'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdoSeparation();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{separate ? 'Join' : 'Separate'}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/CurrentPrice.js",["33"],"import React, { useState, useEffect } from 'react';\nimport './CurrentPrice.css';\n\nconst CurrentPrice = ({ currentPrice }) => {\n\tconst [price, setPrice] = useState(null);\n\tconst [date, setDate] = useState(null);\n\tconst [time, setTime] = useState(null);\n\n\tconst getCurrentPrice = () => {\n\t\tsetPrice(currentPrice['total']);\n\t};\n\n\tconst getCurrentDate = () => {\n\t\tlet newDate = '';\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tnewDate = newDate + currentPrice['startsAt'][i];\n\t\t}\n\t\tsetDate(newDate);\n\t};\n\n\tconst getCurrentTime = () => {\n\t\tlet newTime = '';\n\t\tfor (let i = 11; i < 16; i++) {\n\t\t\tnewTime = newTime + currentPrice['startsAt'][i];\n\t\t}\n\t\tsetTime(newTime);\n\t};\n\n\tuseEffect(() => {\n\t\tgetCurrentPrice();\n\t\tgetCurrentTime();\n\t\tgetCurrentDate();\n\t}, []);\n\treturn (\n\t\t<div className='currentPrice'>\n\t\t\t<h2 id={price > 3 ? 'highPrice' : ''}>{price}kr</h2>\n\t\t\t<h4>\n\t\t\t\tat {time} on {date}\n\t\t\t</h4>\n\t\t</div>\n\t);\n};\n\nexport default CurrentPrice;\n","/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/TodaysPrices.js",[],"/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/TomorrowsPrices.js",[],"/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/Prices.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":79,"column":5,"nodeType":"40","endLine":79,"endColumn":7,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"42","line":85,"column":5,"nodeType":"40","endLine":85,"endColumn":19,"suggestions":"43"},{"ruleId":"38","severity":1,"message":"44","line":33,"column":5,"nodeType":"40","endLine":33,"endColumn":7,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPrices'. Either include it or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has missing dependencies: 'todaysPrices' and 'tomorrowsPrices'. Either include them or remove the dependency array.",["49"],"React Hook useEffect has missing dependencies: 'getCurrentDate', 'getCurrentPrice', and 'getCurrentTime'. Either include them or remove the dependency array.",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},"Update the dependencies array to be: [getPrices]",{"range":"57","text":"58"},"Update the dependencies array to be: [currentPrice, todaysPrices, tomorrowsPrices]",{"range":"59","text":"60"},"Update the dependencies array to be: [getCurrentDate, getCurrentPrice, getCurrentTime]",{"range":"61","text":"62"},[1784,1786],"[getPrices]",[1903,1917],"[currentPrice, todaysPrices, tomorrowsPrices]",[743,745],"[getCurrentDate, getCurrentPrice, getCurrentTime]"]