{"ast":null,"code":"var _jsxFileName = \"/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/TomorrowsPrices.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './TomorrowsPrices.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst TomorrowsPrices = _ref => {\n  let {\n    tomorrowsPrices\n  } = _ref;\n  const labels = Array.from({\n    length: 24\n  }, (e, i) => i);\n  console.log(labels);\n  const prices = Array.from(tomorrowsPrices, days => {\n    return days['total'];\n  });\n  console.log(prices);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Tomorrow's Prices\",\n      data: prices,\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tomorrowsPrices\",\n    children: data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: {\n          maintainAspectRatio: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_c = TomorrowsPrices;\nexport default TomorrowsPrices;\n\nvar _c;\n\n$RefreshReg$(_c, \"TomorrowsPrices\");","map":{"version":3,"sources":["/home/leo/Dokument/GitHub/tibber/tibber-webapp/src/components/TomorrowsPrices.js"],"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","TomorrowsPrices","tomorrowsPrices","labels","Array","from","length","e","i","console","log","prices","days","data","datasets","label","borderColor","backgroundColor","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SACCC,KAAK,IAAIC,OADV,EAECC,aAFD,EAGCC,WAHD,EAICC,YAJD,EAKCC,WALD,EAMCC,KAND,EAOCC,OAPD,EAQCC,MARD,QASO,UATP;AAUA,OAAO,uBAAP;;AAEAP,OAAO,CAACQ,QAAR,CACCP,aADD,EAECC,WAFD,EAGCC,YAHD,EAICC,WAJD,EAKCC,KALD,EAMCC,OAND,EAOCC,MAPD;;AAUA,MAAME,eAAe,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AAChD,QAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAX,EAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAArC,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEA,QAAMQ,MAAM,GAAGP,KAAK,CAACC,IAAN,CAAWH,eAAX,EAA6BU,IAAD,IAAU;AACpD,WAAOA,IAAI,CAAC,OAAD,CAAX;AACA,GAFc,CAAf;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEA,QAAME,IAAI,GAAG;AACZV,IAAAA,MADY;AAEZW,IAAAA,QAAQ,EAAE,CACT;AACCC,MAAAA,KAAK,EAAE,mBADR;AAECF,MAAAA,IAAI,EAAEF,MAFP;AAGCK,MAAAA,WAAW,EAAE,mBAHd;AAICC,MAAAA,eAAe,EAAE;AAJlB,KADS;AAFE,GAAb;AAWA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACEJ,IAAI,iBACJ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,OAAO,EAAE;AAAEK,UAAAA,mBAAmB,EAAE;AAAvB;AAA3B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CA7BD;;KAAMjB,e;AA+BN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n\tChart as ChartJS,\n\tCategoryScale,\n\tLinearScale,\n\tPointElement,\n\tLineElement,\n\tTitle,\n\tTooltip,\n\tLegend,\n} from 'chart.js';\nimport './TomorrowsPrices.css';\n\nChartJS.register(\n\tCategoryScale,\n\tLinearScale,\n\tPointElement,\n\tLineElement,\n\tTitle,\n\tTooltip,\n\tLegend\n);\n\nconst TomorrowsPrices = ({ tomorrowsPrices }) => {\n\tconst labels = Array.from({ length: 24 }, (e, i) => i);\n\tconsole.log(labels);\n\n\tconst prices = Array.from(tomorrowsPrices, (days) => {\n\t\treturn days['total'];\n\t});\n\tconsole.log(prices);\n\n\tconst data = {\n\t\tlabels,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"Tomorrow's Prices\",\n\t\t\t\tdata: prices,\n\t\t\t\tborderColor: 'rgb(53, 162, 235)',\n\t\t\t\tbackgroundColor: 'rgba(53, 162, 235, 0.5)',\n\t\t\t},\n\t\t],\n\t};\n\treturn (\n\t\t<div className='tomorrowsPrices'>\n\t\t\t{data && (\n\t\t\t\t<div className='chartContainer'>\n\t\t\t\t\t<Line data={data} options={{ maintainAspectRatio: true }} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TomorrowsPrices;\n"]},"metadata":{},"sourceType":"module"}